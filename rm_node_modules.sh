#!/bin/bash

usage() {
    echo "Usage: $0 <path_to_folder_containing_react_projects> [--dry-run]"
    echo "--dry run = Show folders that would be cleaned without deleting anything."
    exit 1
}

# If no arguments are provided, display usage and exit.
if [ -z "$1" ]; then
    usage
fi

# Grab the folder to be cleaned.
ROOT_DIR="$1"

# Check if the path exists.
if [ ! -d "$ROOT_DIR" ]; then
    echo "Error: Directory '$ROOT_DIR' does not exist."
    exit 1
fi

# Check if --dry-run is activated.
DRY_RUN=false
if [ "$2" == "--dry-run" ]; then
    DRY_RUN=true
fi

# Keep track of total space freed.
TOTAL_FREED=0

# Find all node_modules folders and delete their contents.
# Display size before and after.
# If --dry-run is enabled, display the folders that would be deleted.
while read -r NODE_MODULES_DIR; do
    # Get parent directory.
    PROJECT_DIR=$(dirname "$NODE_MODULES_DIR")

    # Only clean node_modules if there is a package-lock.json in it (root folder).
    if [ -f "$PROJECT_DIR/package-lock.json" ]; then
        # Calculate size before deletion.
        SIZE_BEFORE_BYTES=$(du -sb "$PROJECT_DIR" 2>/dev/null | awk '{print $1}')

        if [ "$DRY_RUN" = true ]; then
            echo "[DRY RUN] Would clean node_modules in: $PROJECT_DIR"
        else
            echo "Cleaning node_modules in: $PROJECT_DIR"

            # Delete contents.
            rm -rf "$NODE_MODULES_DIR"/* "$NODE_MODULES_DIR"/.[!.]* "$NODE_MODULES_DIR"/..?*

            # Calculate size after deletion.
            SIZE_AFTER_BYTES=$(du -sb "$PROJECT_DIR" 2>/dev/null | awk '{print $1}')
            SPACE_FREED_MB=$(echo "scale=2; ($SIZE_BEFORE_BYTES - $SIZE_AFTER_BYTES) / 1024 / 1024" | bc)
            TOTAL_FREED=$(echo "$TOTAL_FREED + $SPACE_FREED_MB" | bc)

            # Display freed space
            echo "Freed space: ${SPACE_FREED_MB}MB"
            echo "-------------------------------------------"
        fi
    fi
done < <(find "$ROOT_DIR" -type d -name "node_modules")

if [ "$DRY_RUN" != true ]; then
    echo "Total space freed: ${TOTAL_FREED}MB"
    echo "Cleanup complete!"
fi
